Your company is ready to start using Docker on some of their servers. In order to get started, they want you to set up and configure Docker CE on a server that has already been set up. You will need to make sure that the server meets the following specifications:

Docker CE is installed and running on the server.
Use Docker CE version 5:18.09.5~3-0~ubuntu-bionic.
Any non-root user has permission to run docker commands.
The default logging driver is set to syslog.


[NOTE: Write the series of commands to achieve above in this file below the question scenario with documentation]


Good luck!

Docker CE is installed and running on the server.
=================================================

1. Remove any older installations of Docker that may be on the system:

	sudo apt remove docker docker-engine docker.io

2. Make sure you have the necessary packages to allow the use of Docker’s repository:

	sudo apt install apt-transport-https ca-certificates curl software-properties-common gnupg
	
3. Add Docker’s GPG key:

	curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
	
4. Verify the fingerprint of the GPG key:

	sudo apt-key fingerprint 0EBFCD88
	
5.	Add the stable Docker repository:

	sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"

6. Update your package index and install Docker CE:

	sudo apt update
	sudo apt install docker-ce
	
To install specific Docker CE version 5:18.09.5~3-0~ubuntu-bionic.
=================================================================
	
https://ubuntu.pkgs.org/18.04/docker-ce-test-amd64/docker-ce_18.09.5~3-0~ubuntu-bionic_amd64.deb.html

	$ sudo apt install docker-ce=5:18.09.2~3-0~ubuntu-bionic docker-ce-cli=5:18.09.2~3-0~ubuntu-bionic containerd.io

7. Once it is installed, verify if the Docker service is running with command:

	$ systemctl status docker



Any non-root user has permission to run docker commands.
=======================================================

1. To run Docker as a non-root user, you have to add your user to the docker group.

2. Create a docker group:

	$ sudo groupadd docker
	
3. Add users to the docker group:

	$ sudo usermod -aG docker [non-root user]

Default logging driver is set to syslog.
=========================================

To configure the Docker daemon to default to a specific logging driver, set the value of log-driver to the name of the logging driver in the daemon.json file, 
which is located in /etc/docker/ on Linux hosts or C:\ProgramData\docker\config\ on Windows server hosts. The default logging driver is json-file. 
The following example explicitly sets the default logging driver to syslog:

{
  "log-driver": "syslog"
}

Execution:
=========
yum install docker -y
systemctl enable docker
sudo groupadd docker
sudo usermod -aG docker arun

[root@docker ~]# cat /etc/docker/daemon.json
{
  "log-driver": "syslog"
}
systemctl restart docker 

Testing:

[root@docker ~]# su - arun
[arun@docker ~]$ docker ps
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES
a178fa5a4a20        nginx               "nginx -g 'daemon of…"   3 minutes ago       Up 3 minutes        80/tcp              test
8ef0490801e0        nginx               "nginx -g 'daemon of…"   About an hour ago   Up About an hour    80/tcp              mytest
[arun@docker ~]$ docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
nginx               latest              9beeba249f3e        2 weeks ago         127MB
[arun@docker ~]$ id -a
uid=1003(arun) gid=1003(arun) groups=1003(arun)
[arun@docker ~]$



